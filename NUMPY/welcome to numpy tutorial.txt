welcome to numpy tutorial


import numpy as np
myarr = np.array([[3,6,32,7]], np.int64)

myarr[0,1]
6

myarr.shape
(1, 4)

myarr.dtype
dtype('int64')

myarr[0,1] = 45
myarr
array([[ 3, 45, 32,  7]], dtype=int64)

Array creation: Conversion from the other python strutures

listarray = np.array([[1,2,3], [5,8,5], [0,3,1]])
listarray
array([[1, 2, 3],
       [5, 8, 5],
       [0, 3, 1]])

listarray.dtype
dtype('int32')

listarray.shape
(3, 3)

listarray.size
9

np.array({34,23,23})
array({34, 23}, dtype=object)

zeros =np.zeros((2,5))
zeros
array([[0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0.]])

zeros.shape
(2, 5)

zeros.dtype
dtype('float64')


rng = np.arange(15)
rng 
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14])

lspace = np.linspace(1,5,4)
lspace
array([1.        , 2.33333333, 3.66666667, 5.        ])

emp = np.empty((4,6))
emp
array([[6.23042070e-307, 4.67296746e-307, 1.69121096e-306,
        2.78146625e-307, 1.42413555e-306, 1.78019082e-306],
       [1.37959740e-306, 6.23057349e-307, 1.02360935e-306,
        1.69120416e-306, 1.78022342e-306, 6.23058028e-307],
       [1.06811422e-306, 9.45699680e-308, 1.11258854e-306,
        1.11261502e-306, 1.42410839e-306, 7.56597770e-307],
       [6.23059726e-307, 1.42419530e-306, 6.89805151e-307,
        1.78020169e-306, 1.42410974e-306, 2.22522596e-306]])

emp_like = np.empty_like(lspace)
emp_like
array([1.        , 2.33333333, 3.66666667, 5.        ])

ide =  np.identity(45)
ide
array([[1., 0., 0., ..., 0., 0., 0.],
       [0., 1., 0., ..., 0., 0., 0.],
       [0., 0., 1., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 1., 0., 0.],
       [0., 0., 0., ..., 0., 1., 0.],
       [0., 0., 0., ..., 0., 0., 1.]])

ide.shape
(45, 45)

arr = np.arange(99)
arr
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
       51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
       68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
       85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98])
       
arr = arr.reshape(3,33)
arr
array([[ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
        16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
        32],
       [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,
        49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
        65],
       [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
        82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
        98]])
arr = arr.ravel()
arr
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
       51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
       68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
       85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98])
arr.shape
(99,)









continued



np_ar

np_ar

x = [[1,2,3],[4,5,6],[7,1,0]]
ar = np.array(x)
ar
array([[1, 2, 3],
       [4, 5, 6],
       [7, 1, 0]])
ar.sum(axis=0)
array([12,  8,  9])
ar.sum(axis=1)
array([ 6, 15,  8])
Selection deleted
ar.T
array([[1, 4, 7],
       [2, 5, 1],
       [3, 6, 0]])
ar.T.T
array([[1, 2, 3],
       [4, 5, 6],
       [7, 1, 0]])
ar.flat
<numpy.flatiter at 0x27b8a5c1b10>
for item in ar.flat:
    print(item)
1
2
3
4
5
6
7
1
0
ar.ndim
2
ar.size
9
ar.nbytes
36
one = np.array([1,3,4,634,2])
one.argmax()
3
one.argsort()
array([0, 4, 1, 2, 3], dtype=int64)
one.argmin()
0
ar.argmax(axis=0)
array([2, 1, 1], dtype=int64)
Selection deleted
ar.argmin(axis=1)
array([0, 0, 2], dtype=int64)
ar.argsort()
array([[0, 1, 2],
       [0, 1, 2],
       [2, 1, 0]], dtype=int64)
ar.argmin()
8
ar.argmax()
6
ar.argmax(axis=1)
array([2, 2, 0], dtype=int64)
ar.argmin(axis=0)
array([0, 2, 2], dtype=int64)
ar.argsort(axis=0)
array([[0, 2, 2],
       [1, 0, 0],
       [2, 1, 1]], dtype=int64)
ar.argsort(axis=1)
array([[0, 1, 2],
       [0, 1, 2],
       [2, 1, 0]], dtype=int64)
ar.ravel()
array([1, 2, 3, 4, 5, 6, 7, 1, 0])
ar.reshape((9,))
array([1, 2, 3, 4, 5, 6, 7, 1, 0])
ar.reshape((9,1))
array([[1],
       [2],
       [3],
       [4],
       [5],
       [6],
       [7],
       [1],
       [0]])
ar
array([[1, 2, 3],
       [4, 5, 6],
       [7, 1, 0]])
ar2 = np.array([[1,2,1],[4,0,6],[8,1,0]])
ar2
array([[1, 2, 1],
       [4, 0, 6],
       [8, 1, 0]])
ar + ar2
array([[ 2,  4,  4],
       [ 8,  5, 12],
       [15,  2,  0]])
[324, 34] + [34, 543]
[324, 34, 34, 543]
ar*ar2
array([[ 1,  4,  3],
       [16,  0, 36],
       [56,  1,  0]])
ar-ar2
array([[ 0,  0,  2],
       [ 0,  5,  0],
       [-1,  0,  0]])
Selection deleted
np.sqrt(ar)
array([[1.        , 1.41421356, 1.73205081],
       [2.        , 2.23606798, 2.44948974],
       [2.64575131, 1.        , 0.        ]])
ar.sum()
29
ar.max()
7
ar
array([[1, 2, 3],
       [4, 5, 6],
       [7, 1, 0]])
ar.min()
0
np.where(ar>5)
(array([1, 2], dtype=int64), array([2, 0], dtype=int64))
np.where(ar==5)
(array([1], dtype=int64), array([1], dtype=int64))
type(np.where(ar>5))
tuple
np.where(ar<5)
(array([0, 0, 0, 1, 2, 2], dtype=int64),
 array([0, 1, 2, 0, 1, 2], dtype=int64))
np.count_nonzero(ar)
8
Selection deleted
np.nonzero(ar)
(array([0, 0, 0, 1, 1, 1, 2, 2], dtype=int64),
 array([0, 1, 2, 0, 1, 2, 0, 1], dtype=int64))
ar[1,2] = 0
np.nonzero(ar)
(array([0, 0, 0, 1, 1, 2, 2], dtype=int64),
 array([0, 1, 2, 0, 1, 0, 1], dtype=int64))
import sys
py_ar = [0,4,55,2]
np_ar = np.array(py_ar)
sys.getsizeof(1)* len(py_ar)
112
np_ar.itemsize * np_ar.size
16


np_ar.tolist()
[0, 4, 55, 2]


